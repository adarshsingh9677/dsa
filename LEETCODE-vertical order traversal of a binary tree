/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    map<int,map<int,vector<pair<int,int>>>> mmmp;
    void solve(TreeNode* root,int c,int r)
    {
        if(root==NULL)
        {
            return;
        }
        mmmp[c][r].push_back(make_pair(r,root->val));
        solve(root->left,c-1,r+1);
        solve(root->right,c+1,r+1);
    }
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> v;
        if(root==NULL)
        {
            return v;
        }
        int c=0,r=0;
        solve(root,c,r);
        for(auto y:mmmp)
        {
            vector<int>k;
            for(auto x:y.second)
            {
                sort(x.second.begin(),x.second.end());
                for(auto z:x.second)
                {
                    k.push_back(z.second);
                }
            }
            v.push_back(k);
        }
        return v;
    }
};
