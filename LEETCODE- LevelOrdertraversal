/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*> q;
        TreeNode *temp;
        vector<vector<int>> v;
        if(root==NULL)
        {
            return v;
        }
        int c=0,curr=1;
        q.push(root);
        while(!q.empty())
        {
            c=0;
            vector<int>k;
            while(!q.empty() && curr--)
            {
                temp=q.front();
                q.pop();
                k.push_back(temp->val);
                if(temp->left!=NULL)
                {
                    c++;
                    q.push(temp->left);
                }
                if(temp->right!=NULL)
                {
                    c++;
                    q.push(temp->right);
                }
            }
            v.push_back(k);
            curr=c;
        }
        return v;
    }
};
