class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int n=nums.size();
        vector<int> v(2);
        v[0]=-1;
        v[1]=-1;
        
        int low=0,high=n-1,mid;
        while(low<=high)
        {
            mid=(low+high)/2;
            if(nums[mid]==target)
            {
                if(mid==0 || (mid-1>=0 && nums[mid-1]<target))
                {
                    v[0]=mid;
                    break;
                }
                high=mid-1;
            }
            else if(nums[mid]>target)
            {
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
            
        }
        low=0;high=n-1;
        while(low<=high)
        {
            mid=(low+high)/2;
            if(nums[mid]==target)
            {
                if(mid==n-1 || (mid+1<n && nums[mid+1]>target))
                {
                    v[1]=mid;
                    break;
                }
                low=mid+1;
            }
            else if(nums[mid]>target)
            {
                high=mid-1;
            }
            else
            {
                low=mid+1;
            }
            
        }
        return v;
        
    }
};
