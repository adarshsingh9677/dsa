#include<bits/stdc++.h>
using namespace std;
int ind=0;
class TNode
{
    public:
    int data;
    TNode *left;
    TNode* right;
    TNode(){}
    TNode(int x)
    {
        data=x;
        left=NULL;
        right=NULL;
    }
};
TNode* constructTree(vector<int> &inor, vector<int> &preor,int left,int right,unordered_map<int,int>&mmp)
{
    if(left>right)
    {
        return NULL;
    }
    int currelemepos=mmp[preor[ind]];
    TNode *currnode=new TNode(preor[ind++]);
    if(left==right)
    {
        return currnode;
    }
    currnode->left=constructTree(inor, preor,left,currelemepos-1,mmp);
    currnode->right=constructTree(inor, preor,currelemepos+1,right,mmp);
    return currnode;
}
void printpostorder(TNode* node)
{
    if (node == NULL)
        return;
    
    printpostorder(node->left);
    cout<<node->data<<" ";
    printpostorder(node->right);
}

int main()
{
    vector<int> preorder{1,2,4,5,3,6};
    vector<int> inorder{4,2,5,1,3,6};
    unordered_map<int,int>mmp;
    for(int i=0;i<6;i++)
    {
        mmp[inorder[i]]=i;
    }
    TNode *root=constructTree(inorder, preorder,0,5,mmp);
    printpostorder(root);
}
