/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
    if(head==NULL || head->next==NULL)
    {
        return NULL;
    }
    ListNode*slow,*fast;
    slow=fast=head;
    bool iscycle=false;
    while(fast->next!=NULL)
    {
        slow=slow->next;
        fast=fast->next->next;
        if(fast==NULL)
        {
            return NULL;
        }
        if(slow==fast)
        {
            iscycle=true;
            break;
        }
    }
    if(iscycle)
    {
        fast=head;
        while(slow!=fast)
        {
            slow=slow->next;
            fast=fast->next;
        }
        return slow;
    }
    return NULL;
    }
};
