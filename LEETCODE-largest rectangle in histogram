class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();       
        vector<int> leftsmaller(n),rightsmaller(n);
        stack<int>st;
        int ans=-1;
        for(int i=0;i<n;i++)
        {
            while(!st.empty() && heights[st.top()]>=heights[i])
            {
                st.pop();
            }
            if(st.empty())
            {
                leftsmaller[i]=0;
            }
            else
            {
                leftsmaller[i]=st.top()+1;
            }
            st.push(i);
        }
        while(!st.empty())
        {
            st.pop();
        }
        for(int i=n-1;i>=0;i--)
        {
            while(!st.empty() && heights[st.top()]>=heights[i])
            {
                st.pop();
            }
            if(st.empty())
            {
                ans=max(ans,((n-1)-leftsmaller[i]+1)*heights[i]);
            }
            else
            {
                ans=max(ans,((st.top()-1)-leftsmaller[i]+1)*heights[i]);
            }
            st.push(i);
        }
        return ans;
    }
};
